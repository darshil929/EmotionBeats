"""Create initial tables

Revision ID: 1bfc7ff9deb9
Revises: 
Create Date: 2025-04-18 13:24:24.841276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1bfc7ff9deb9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('spotify_id', sa.String(length=50), nullable=True),
    sa.Column('spotify_access_token', sa.Text(), nullable=True),
    sa.Column('spotify_refresh_token', sa.Text(), nullable=True),
    sa.Column('spotify_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_spotify_id'), 'user', ['spotify_id'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('chatsession',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_identifier', sa.String(length=50), nullable=False),
    sa.Column('start_timestamp', sa.DateTime(), nullable=False),
    sa.Column('end_timestamp', sa.DateTime(), nullable=True),
    sa.Column('detected_emotions', sa.JSON(), nullable=True),
    sa.Column('session_context', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_identifier')
    )
    op.create_table('preferences',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('preferred_genres', sa.JSON(), nullable=True),
    sa.Column('preferred_artists', sa.JSON(), nullable=True),
    sa.Column('preferred_eras', sa.JSON(), nullable=True),
    sa.Column('preferred_moods', sa.JSON(), nullable=True),
    sa.Column('disliked_genres', sa.JSON(), nullable=True),
    sa.Column('disliked_artists', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('chatmessage',
    sa.Column('chat_session_id', sa.UUID(), nullable=False),
    sa.Column('sender', sa.String(length=10), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('detected_emotion', sa.String(length=20), nullable=True),
    sa.Column('emotion_confidence', sa.Float(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chatsession.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playlist',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chat_session_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('spotify_playlist_id', sa.String(length=50), nullable=True),
    sa.Column('emotion_context', sa.String(length=50), nullable=True),
    sa.Column('track_count', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chatsession.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playlisttrack',
    sa.Column('playlist_id', sa.UUID(), nullable=False),
    sa.Column('spotify_track_id', sa.String(length=50), nullable=False),
    sa.Column('track_name', sa.String(length=255), nullable=False),
    sa.Column('artist_name', sa.String(length=255), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlist.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlisttrack')
    op.drop_table('playlist')
    op.drop_table('chatmessage')
    op.drop_table('preferences')
    op.drop_table('chatsession')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_spotify_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
