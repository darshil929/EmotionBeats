name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy bandit
          pip install -r requirements.txt
          pip install -r requirements-test.txt
      
      - name: Check code formatting with Black
        run: |
          cd backend
          black --check --line-length 88 app tests
      
      - name: Check imports with isort
        run: |
          cd backend
          isort --check --profile black app tests
      
      - name: Lint with flake8
        run: |
          cd backend
          # stop the build if there are Python syntax errors or undefined names
          flake8 app tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 app tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      
      - name: Type check with mypy
        run: |
          cd backend
          mypy --ignore-missing-imports app
      
      - name: Security check with bandit
        run: |
          cd backend
          bandit -r app -x tests

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install pytest-github-actions-annotate-failures
      
      - name: Run tests
        run: |
          cd backend
          DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres pytest -xvs tests/ --cov=app --cov-report=xml
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID || 'test_client_id' }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET || 'test_client_secret' }}
          SPOTIFY_REDIRECT_URI: https://localhost/api/auth/spotify/callback
      
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          fail_ci_if_error: false

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: emotionbeats-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
