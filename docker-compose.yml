version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=https://localhost/api
    user: "1000:1000"
    depends_on:
      - backend
    networks:
      - emotionbeats-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app:cached
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/emotionbeats
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REDIRECT_URI=${SPOTIFY_REDIRECT_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_URL=redis://redis:6379/0
      - SOCKETIO_REDIS_URL=redis://redis:6379/1
      - SOCKETIO_CORS_ORIGINS=["http://localhost:3000", "https://localhost"]
      - SOCKETIO_PING_TIMEOUT=60
      - SOCKETIO_PING_INTERVAL=25
      - ENVIRONMENT=development
    user: "1000:1000"
    depends_on:
      - db
      - redis
    networks:
      - emotionbeats-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - emotionbeats-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=emotionbeats
    networks:
      - emotionbeats-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - emotionbeats-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped

networks:
  emotionbeats-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: